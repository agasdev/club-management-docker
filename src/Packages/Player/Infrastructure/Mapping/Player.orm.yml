App\Packages\Player\Domain\Entity\Player:
    type: entity
    table: player
    repositoryClass: App\Packages\Player\Infrastructure\Persistence\Doctrine\PlayerRepository
    fields:
        dateOfBirth:
            type: datetime
            scale: null
            length: null
            unique: false
            nullable: false
            precision: null
            column: date_of_birth
        createdAt:
            type: datetime_immutable
            scale: null
            length: null
            unique: false
            nullable: false
            precision: null
            column: created_at
            options:
                default: CURRENT_TIMESTAMP
        updatedAt:
            type: datetime_immutable
            scale: null
            length: null
            unique: false
            nullable: true
            precision: null
            column: updated_at
            columnDefinition: DATETIME on update CURRENT_TIMESTAMP
    embedded:
        id:
            class: App\Packages\Player\Domain\Entity\Value\PlayerUuid
            columnPrefix: false
        name:
            class: App\Packages\Player\Domain\Entity\Value\PlayerName
            columnPrefix: false
        city:
            class: App\Packages\Player\Domain\Entity\Value\PlayerCity
            columnPrefix: false
        country:
            class: App\Packages\Player\Domain\Entity\Value\PlayerCountry
            columnPrefix: false
        salary:
            class: App\Packages\Player\Domain\Entity\Value\PlayerSalary
            columnPrefix: false
        email:
            class: App\Packages\Player\Domain\Entity\Value\PlayerEmail
            columnPrefix: false
    manyToOne:
        club:
            targetEntity: App\Packages\Club\Domain\Entity\Club
            cascade: {  }
            fetch: LAZY
            mappedBy: null
            inversedBy: players
            joinColumns:
                club_id:
                    referencedColumnName: id
            orphanRemoval: false
    lifecycleCallbacks: {  }